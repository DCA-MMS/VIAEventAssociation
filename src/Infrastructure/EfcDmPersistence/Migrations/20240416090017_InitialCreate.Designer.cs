// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VIAEventAssociation.Infrastructure.EfcDmPersistence;

#nullable disable

namespace VIAEventAssociation.Infrastructure.EfcDmPersistence.Migrations
{
    [DbContext(typeof(EfcDbContext))]
    [Migration("20240416090017_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("EventUser", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ParticipantsId")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId", "ParticipantsId");

                    b.HasIndex("ParticipantsId");

                    b.ToTable("EventUser");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Event.Entities.Invitation.Invitation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("GuestId");

                    b.ToTable("Invitation");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Event.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Visibility")
                        .HasColumnType("INTEGER");

                    b.ComplexProperty<Dictionary<string, object>>("Capacity", "VIAEventAssociation.Core.Domain.Aggregates.Event.Event.Capacity#EventCapacity", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Capacity");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Description", "VIAEventAssociation.Core.Domain.Aggregates.Event.Event.Description#EventDescription", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Title", "VIAEventAssociation.Core.Domain.Aggregates.Event.Event.Title#EventTitle", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Title");
                        });

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT");

                    b.ComplexProperty<Dictionary<string, object>>("Email", "VIAEventAssociation.Core.Domain.Aggregates.Users.User.Email#Email", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Email");
                        });

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EventUser", b =>
                {
                    b.HasOne("VIAEventAssociation.Core.Domain.Aggregates.Event.Event", null)
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VIAEventAssociation.Core.Domain.Aggregates.Users.User", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Event.Entities.Invitation.Invitation", b =>
                {
                    b.HasOne("VIAEventAssociation.Core.Domain.Aggregates.Event.Event", null)
                        .WithMany("Invitations")
                        .HasForeignKey("EventId");

                    b.HasOne("VIAEventAssociation.Core.Domain.Aggregates.Users.User", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Event.Event", b =>
                {
                    b.OwnsOne("VIAEventAssociation.Core.Domain.Common.Values.TimeRange", "Duration", b1 =>
                        {
                            b1.Property<Guid>("EventId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("End")
                                .HasColumnType("TEXT")
                                .HasColumnName("DurationEnd");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("TEXT")
                                .HasColumnName("DurationStart");

                            b1.HasKey("EventId");

                            b1.ToTable("Events");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.Navigation("Duration");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Users.User", b =>
                {
                    b.OwnsOne("VIAEventAssociation.Core.Domain.Aggregates.Users.Values.FullName", "FullName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("LastName");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("FullName")
                        .IsRequired();
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Event.Event", b =>
                {
                    b.Navigation("Invitations");
                });
#pragma warning restore 612, 618
        }
    }
}
